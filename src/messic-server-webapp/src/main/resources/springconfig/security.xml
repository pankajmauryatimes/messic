<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- resources will not need security -->
	<http pattern="/css/**" security="none" />
	<http pattern="/img/**" security="none" />
	<http pattern="/js/**" security="none" />
	<http pattern="/humans.txt" security="none" />
	<http pattern="/lang.do" security="none" />
	<http pattern="/robots.txt" security="none" />
	<http pattern="/crossdomain.xml" security="none" />
	<http pattern="/404.html" security="none" />

	<http auto-config="false" use-expressions="true"
		entry-point-ref="loginUrlAuthenticationEntryPoint" create-session="stateless">
		
			<intercept-url pattern="/login.do" access="permitAll" />
			
			<!-- we need complete access for the radio services -->
			<intercept-url pattern="/radio.do" access="permitAll" />
			<intercept-url pattern="/services/radio/cover" access="permitAll" />
			<intercept-url pattern="/services/radio/status" access="permitAll" />
												
			<intercept-url pattern="/services/captcha" access="permitAll" />
			<intercept-url pattern="/services/captcha/validate" access="permitAll" />
	
			<intercept-url pattern="/settings.do" access="permitAll" />
			<intercept-url pattern="/services/settings" access="permitAll" method="POST" />
			<intercept-url pattern="/services/settings/admin" access="permitAll"  method="POST"/>
			<intercept-url pattern="/services/settings/*/validate" access="permitAll" />
			
			<intercept-url pattern="/**" access="isAuthenticated()" />
		
		<access-denied-handler error-page="/denied" />

		<logout invalidate-session="true" logout-success-url="/login.do" logout-url="/logout.do" />
		
		<custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER" />
		<custom-filter ref="tokenFilter" position="SESSION_MANAGEMENT_FILTER" />

	</http>


	<beans:bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.do" />
	</beans:bean>

	<beans:bean id="authenticationFilter"
		class="org.messic.server.facade.security.CustomUsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="filterProcessesUrl" value="/messiclogin" />
		<beans:property name="authenticationFailureHandler"
			ref="securityLoginFailureHandler" />
		<beans:property name="authenticationSuccessHandler"
			ref="securityLoginSuccessHandler" />
		<beans:property name="postOnly" value="false" />
		<beans:property name="allowSessionCreation" value="false" />
	</beans:bean>

	<beans:bean id="tokenFilter"
		class="org.messic.server.facade.security.TokenManagementFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="authenticationTokenId" value="messic_token" />
		<beans:property name="continueChainBeforeSuccessfulAuthentication"
			value="true" />
	</beans:bean>

	<beans:bean id="securityLoginSuccessHandler"
		class="org.messic.server.facade.security.SecurityLoginSuccessHandler" />

	<beans:bean id="securityLoginFailureHandler"
		class="org.messic.server.facade.security.SecurityLoginFailureHandler" />

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder hash="md5" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>
